@baseUrl = http://localhost:3000/api
@contentType = application/json

### 1. Login as Admin
# @name loginAdmin
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "admin@example.com",
  "password": "admin123"
}

### 2. Extract admin token from response
@adminToken = {{loginAdmin.response.body.token}}

### 3. Login as Regular User
# @name loginUser
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "user@example.com",
  "password": "user123"
}

### 4. Extract user token from response
@userToken = {{loginUser.response.body.token}}

### 5. Get All Items - Admin Access
GET {{baseUrl}}/admin/items
Authorization: Bearer {{adminToken}}

### 6. Get All Items - With Filtering
GET {{baseUrl}}/admin/items?search=test&status=AVAILABLE&page=1&limit=10
Authorization: Bearer {{adminToken}}

### 7. Get All Items - Unauthorized (User Role)
GET {{baseUrl}}/admin/items
Authorization: Bearer {{userToken}}

### 8. Create New Item
# @name createItem
POST {{baseUrl}}/admin/items
Content-Type: {{contentType}}
Authorization: Bearer {{adminToken}}

{
  "serialNumber": "TEST126",
  "name": "Test Item",
  "partNumber": "PART123",
  "category": "SENSOR",
  "sensor": "Temperature",
  "description": "Test description",
  "status": "AVAILABLE"
}

### 9. Create Item with Duplicate Serial Number (Should Fail)
POST {{baseUrl}}/admin/items
Content-Type: {{contentType}}
Authorization: Bearer {{adminToken}}

{
  "serialNumber": "TEST126",
  "name": "Duplicate Item",
  "partNumber": "PART123",
  "category": "SENSOR",
  "sensor": "Temperature",
  "description": "This should fail",
  "status": "AVAILABLE"
}

### 10. Get Item History
GET {{baseUrl}}/admin/items/history?serialNumber=TEST126
Authorization: Bearer {{adminToken}}

### 11. Update Item
PATCH {{baseUrl}}/admin/items?serialNumber=TEST126
Content-Type: {{contentType}}
Authorization: Bearer {{adminToken}}

{
  "name": "Updated Test Item",
  "description": "Updated description"
}

### 12. Delete Item
DELETE {{baseUrl}}/admin/items?serialNumber=TEST126
Authorization: Bearer {{adminToken}}

### 13. Get All Vendors
GET {{baseUrl}}/admin/vendors
Authorization: Bearer {{adminToken}}

### 14. Create New Vendor
# @name createVendor
POST {{baseUrl}}/admin/vendors
Content-Type: {{contentType}}
Authorization: Bearer {{adminToken}}

{
  "name": "Test Vendor",
  "address": "Test Address",
  "contactName": "John Doe",
  "contactPhone": "1234567890",
  "contactEmail": "john@test.com",
  "service": "Calibration"
}

### 15. Get All Maintenance Requests
GET {{baseUrl}}/admin/maintenance
Authorization: Bearer {{adminToken}}

### 16. Get Dashboard Statistics
GET {{baseUrl}}/admin/dashboard
Authorization: Bearer {{adminToken}}

### 17. Get Activity Logs
GET {{baseUrl}}/admin/activity-logs
Authorization: Bearer {{adminToken}}

### 18. Get Activity Logs with Filtering
GET {{baseUrl}}/admin/activity-logs?type=USER_CREATED&page=1&limit=10
Authorization: Bearer {{adminToken}}

### 19. Get Notifications
GET {{baseUrl}}/admin/notifications
Authorization: Bearer {{adminToken}}

### 20. Get All Users
GET {{baseUrl}}/admin/users
Authorization: Bearer {{adminToken}}

### 21. Create New User
POST {{baseUrl}}/admin/users
Content-Type: {{contentType}}
Authorization: Bearer {{adminToken}}

{
  "name": "Test User",
  "email": "testuser@example.com",
  "password": "password123",
  "role": "USER"
}

### 22. Test Invalid Route
GET {{baseUrl}}/admin/invalid-route
Authorization: Bearer {{adminToken}}

### 23. Get All Calibrations
GET {{baseUrl}}/admin/calibrations
Authorization: Bearer {{adminToken}}

### 24. Get Inventory Schedules
GET {{baseUrl}}/admin/inventory-schedules
Authorization: Bearer {{adminToken}} 